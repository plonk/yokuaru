* よくある杖と敵ソルバーを変更して二豚方位を解けるようにする

なんか、フェイ問リーダーのクラスが持っている状態をコピーしたものを作り
込むだけの作業な気がする。

Room = Fei::Room とか
class Room < Fei::Room
とかでいいんでないか。

ソルバーがフェイ問リーダーのクラスツリーに依存するのはよくない気がする。
でも、依存させないと同型なクラスを作るだけになってしまう…。←それでいいや。

** DONE フェイ問ファイルからフロアを読み込めるようにする
** DONE 敵にかなしば状態を作る
** TODO 敵の移動・行動フェーズを作る
「もしもし亀よ」ソルバーでそのような物を作ったので、それを参考にする。
両者のコマンドの仕組みが違うはずなので、それを調べる。

もしもし亀よでは、コマンドクラスというようなものはなくて、コマンドの種
類を表わすシンボルと、引数のリストになっていた。例: [:attack]、[:move, [-1, 0]]。

*** 状態の遷移の仕方の変更
旧来の Board の計算は、元の状態に対して、アスカの可能な全コマンドを実行して次
の状態群を作る。これをもしもし亀よ型にしたい。

1. 初期状態にアスカのコマンドを実行する。複数の状態を生む。
2. それぞれの状態について、モンスターのターンを実行する。(それぞれ複数
   の状態を生む)
3. それぞれの状態のターンを1つ増やす。

**** モンスターのターンについて
何を行うか、2度モンスターに訊く。最初のクエリで移動・行動するフェーズ
が決定するが、実際に移動・行動する段になって状況が変化する場合がある。

1. モンスターが与えられた Board について移動するか行動するかを決定する。
2. 移動することを選択したモンスターを、順番にそれぞれ実際に移動させる。
3. 行動することを選択したモンスターを、順番にそれぞれ実際に行動させる。

*** Board のモンスターの持ち方
順不同の配列クラスである Bag で持っている(何らかの理由でSetで苦労した
覚え)。行動順が関わってくるような問題を解くなら、モンスターの順序を無
視するわけにはいかないだろう。

*** TODO 今回のコードベースでのコマンドクラスをドキュメントする
アスカの行動はコマンドになっているけど、モンスターの行動ではない。
Command{Pick, Throw, Drop, Move, Use}

動作主を引数としてエンコードする必要あり？

二豚方位ソルバーに限ってはモンスターの移動を実装する必要はない。少しず
つ変更するのは多分正しい姿勢。

**** 特技を使うコマンドが要るだろう
実際の挙動はモンスターのクラスで実装されるだろう。動作主をコマンドの引
数としてエンコードする必要がるだろう。

***** DONE コマンドクラスの名前を考える
CommandSkill でいいか。

*** 敵の取りうる行動を乱数を考慮して全て数え上げるべきか考える
二豚方位では敵の行動をリアリスティックにしてもうれしくない。

** TODO デブートンのAIを実装する
ターンがまわってきたときに不思議な力でアスカを即死させるってことでいいか。
** TODO 部屋を実装する
** TODO アイテムに祝福・呪い状態を実装する
** TODO 高とび草の効果を実装する
- 飲んだ場合と敵に当てた場合
- 祝福されていた場合
